/* We want these items to span the whole area the have (svgs don't do this by default)
And we don't want unwanted scrollbars by accident */
html,
body,
head,
svg {
  padding: 0;
  margin: 0;
  height: 100%;
  width: 100%;
  overflow: hidden;
}

/* Grid-Layouting the Dashboard */
body {
  display: grid;
  grid-template-areas: "header" "content";
  grid-template-rows: 100px auto;
  overflow-y: scroll;
}

/* Layouting and styling the Header */
.header {
  grid-area: header;

  background-color: #3e566c;

  box-sizing: border-box;

  display: grid;
  grid-template-areas: "logo buttons";
  grid-template-columns: 250px auto;

  border-bottom: 2px solid white;
}

/* Styling the logo */
.logo {
  grid-area: logo;

  padding: 5px;
  cursor: pointer;
}

.content {
  grid-area: content;
}

/* Styling the buttons */
.buttons {
  grid-area: buttons;

  margin: 20px;

  /* Flexbox is used, because you can add multiple buttons without worrying about the layout 
    More at: https://css-tricks.com/snippets/css/a-guide-to-flexbox/ */
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
}

.function_button {
  margin: 5px;
  cursor: pointer;
  border-radius: 10px;
  border-color: #3e566c;
}

.function_button:hover {
  background-color: #3e566c;

  color: white;
  border-color: white;
}

.graph {
  display: inline-block;
}

.axisTitle {
  text-anchor: middle;
  font-size: 2.6vmin;
}

.parallel {
  font-size: 2vmin;
}

.title {
  text-anchor: middle;
  font-size: 3vmin;
}

.clusterText {
  font-size: 2.5vmin;
  paint-order: stroke;
  stroke: #000000;
  stroke-width: 1px;
  stroke-linecap: butt;
  stroke-linejoin: miter;
}

text {
  font-size: 1.3vmin;
}

.hidden {
  display: none;
}

.highlighted {
  stroke: red;
}

svg {
  font: 10px sans-serif;
}

.background path {
  fill: none;
  stroke: #ddd;
  shape-rendering: crispEdges;
}

.foreground path {
  fill: none;
  stroke: steelblue;
}

.brush .extent {
  fill-opacity: 0.3;
  stroke: #fff;
  shape-rendering: crispEdges;
}

.axis line,
.axis path {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.axis text {
  text-shadow: 0 1px 0 #fff, 1px 0 0 #fff, 0 -1px 0 #fff, -1px 0 0 #fff;
  cursor: move;
  font-size: 1.6vmin;
}

/* selected brushing dimension */
g.dimension.selected .axis path.domain {
  stroke: red;
  stroke-width: 2px;
}

.node {
  fill: gray;
  cursor: pointer;
  stroke-width: 5px;
}

.node text {
  font-size: 12px;
  text-anchor: middle;
  pointer-events: none;
}

.label {
  pointer-events: none;
}

.link {
  stroke: orange;
  stroke-width: 1px;
  fill: none;
}
